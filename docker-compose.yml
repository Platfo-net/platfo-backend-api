services:
  api-1:
    container_name: "${APP_NAME}-api-1"
    build:
      context: .
      args:
        - ENVIRONMENT=${ENVIRONMENT}
    image: "botinow-backend-app"
    volumes:
      - .:/app
    command: /app/startup.sh
    ports:
      - "${API_PORT_1}:8000"
    env_file:
      - .env
    networks:
      - api-1-db-network
      - api-1-redis-network
    depends_on:
      - db

  api-2:
    container_name: "${APP_NAME}-api-2"
    build:
      context: .
      args:
        - ENVIRONMENT=${ENVIRONMENT}
    image: "botinow-backend-app"
    volumes:
      - .:/app
    command: /app/startup.sh
    ports:
      - "${API_PORT_2}:8000"
    env_file:
      - .env
    networks:
      - api-2-db-network
      - api-2-redis-network
    depends_on:
      - db

  api-3:
    container_name: "${APP_NAME}-api-3"
    build:
      context: .
      args:
        - ENVIRONMENT=${ENVIRONMENT}
    image: "botinow-backend-app"
    volumes:
      - .:/app
    command: /app/startup.sh
    ports:
      - "${API_PORT_3}:8000"
    env_file:
      - .env
    networks:
      - api-3-db-network
      - api-3-redis-network
    depends_on:
      - db
  db:
    container_name: "${APP_NAME}-database"
    image: postgres:14
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - api-1-db-network
      - api-2-db-network
      - api-3-db-network
    # healthcheck:
    #   test: [ "CMD-SHELL", "pg_isready", "--username", "postgres" ]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  redis:
    container_name: "${APP_NAME}-redis"
    restart: unless-stopped
    image: redis:6.2.7
    command: "redis-server /usr/local/etc/redis/redis.conf"
    ports:
      - "63793:63793"
    networks:
      - redis-insight-network
      - api-1-redis-network
      - api-2-redis-network
      - api-3-redis-network
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
 

volumes:
  postgres-data:
  redis-data:


networks:
  api-1-db-network:
  api-2-db-network:
  api-3-db-network:
  redis-insight-network:
  api-1-redis-network:
  api-2-redis-network:
  api-3-redis-network:
